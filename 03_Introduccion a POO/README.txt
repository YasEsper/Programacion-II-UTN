# Trabajo Pr√°ctico ‚Äì Introducci√≥n a la Programaci√≥n Orientada a Objetos (IntaPOO)

Este m√≥dulo re√∫ne los primeros ejercicios pr√°cticos orientados a comprender y aplicar los fundamentos de la **Programaci√≥n Orientada a Objetos (POO)** en Java. Cada ejercicio introduce un concepto clave como clases, atributos, m√©todos, constructores, sobrecarga y encapsulamiento.

---

##  Contenido del m√≥dulo

-#  Ejercicio_01-tp-IntaPOO`  
  Creaci√≥n de clases simples con atributos y m√©todos b√°sicos. Primer contacto con objetos.

-#  Ejercicio_02-tp-IntaPOO`  
  Uso de constructores personalizados. Inicializaci√≥n de objetos con distintos valores.

-#  Ejercicio_03-tp-IntaPOO`  
  Aplicaci√≥n de sobrecarga de m√©todos. Uso de `this` para distinguir atributos.

-#  Ejercicio_04-tp-IntaPOO`  
  Introducci√≥n a atributos est√°ticos. Contadores globales y m√©todos de clase.

-#  Ejercicio_05-tp-IntaPOO`  
  Encapsulamiento completo con `private`, `getters` y `setters`. Validaci√≥n de datos.

---

##  Objetivos del m√≥dulo

- Comprender los pilares de la POO: clases, objetos, atributos, m√©todos.
- Aplicar buenas pr√°cticas como encapsulamiento y reutilizaci√≥n.
- Familiarizarse con la sintaxis y estructura de clases en Java.
- Prepararse para el uso de UML y estructuras m√°s complejas.

---

## üõ†Ô∏è Tecnolog√≠as utilizadas

- **Lenguaje**: Java  
- **Entorno**: NetBeans / Visual Studio Code  
- **Entrada/Salida**: Consola est√°ndar (`System.out.println`, `Scanner`)

---

## üìù Notas

- Cada carpeta contiene su propio c√≥digo fuente y documentaci√≥n complementaria.
- Se recomienda seguir el orden num√©rico para respetar la progresi√≥n pedag√≥gica.
- Los ejercicios pueden incluir corre


